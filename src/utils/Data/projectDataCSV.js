export const projectData = [
    {
      projectId: 1,
      projectName: "rock_paper_scissors_game",
      projectURL: "https://github.com/ashleyd480/rock_paper_scissors_game",
      dateCompleted: "01/16/2024",
      projectHeaderImage: "https://github.com/ashleyd480/rock_paper_scissors_game/raw/main/assets/game-screenshot.png",
      projectType: "mini project",
      projectSkills: "CSS, HTML, Javascript",
      projectBlurb: "This project was completed in January 2024 as part of my pre-work for General Assembly after completing a 20-hour course on the basics of HTML, CSS, and JavaScript.",
      projectUX: "The game asks if the user is ready to play: Yes or No. Next, the player has to type rock, paper, or scissors and clicks submit. The computer makes its randomized choice as well. Then, the results are populated below- letting the player know if it was a tie, or whether the user or computer won. Additionally, the user will be able to see what the computer chose too.",
      project_video: "https://www.youtube.com/embed/7jMAgCqjVFs?si=CQpmp8HiAMl8xEI5"
    },
    {
      projectId: 2,
      projectName: "calculator-basic-replica",
      projectURL: "https://github.com/ashleyd480/calculator-basic-replica",
      dateCompleted: "02/27/2024",
      projectHeaderImage: "https://github.com/ashleyd480/calculator-basic-replica/raw/main/assets/calculator-ui.png",
      projectType: "mini project",
      projectSkills: "HTML, Javascript",
      projectBlurb: "This mini-project was completed late Feb 2024 as part of General Assembly's Bootcamp, at the start of Week 3 in our course. The CSS section was pre-built out for us, and the focus of this project was using our knowledge of DOM manipulation and JavaScript.",
      projectUX: "Users can:\n\n- Conduct calculations and see the output of the mathematical operation.\n- Clear all operations and start from 0.\n- See previous history of actions as a history\n- Delete a single history, and clear all history\n- Switch between dark and light mode",
      project_video: "https://www.youtube.com/embed/EPb4YfqK8Zw?si=DS5-e6BV0RHN9C71"
    },
    {
      projectId: 3,
      projectName: "fetch-api-load-stuff",
      projectURL: "https://github.com/ashleyd480/fetch-api-load-stuff",
      dateCompleted: "02/29/2024",
      projectHeaderImage: "https://github.com/ashleyd480/fetch-api-load-stuff/raw/main/assets/load-catfacts.png",
      projectType: "mini project",
      projectSkills: "CSS, HTML, Javascript",
      projectBlurb: "This mini-project was created in my 3rd week of coding bootcamp at General Assembly using JavaScript, HTML, and CSS. It uses the fundamentals of fetch API to allow jokes, cat facts, and memes to be loaded.",
      projectUX: "The following 3 APIs were used.\n- Jokes API: https://official-joke-api.appspot.com/random_ten\n- Cat Facts API: https://catfact.ninja/facts?limit=10\n- Memes API: https://api.imgflip.com/get_memes\n\nEach button on the main page once clicked will load the content from its respective API above.",
      project_video: "https://www.youtube.com/embed/DVZFJaURnrQ?si=RrjcUlPF1iLLQTeT"
    },
    {
      projectId: 4,
      projectName: "inclusive-jobseeker-referral-site",
      projectURL: "https://github.com/ashleyd480/inclusive-jobseeker-referral-site",
      dateCompleted: "03/07/2024",
      projectHeaderImage: "https://github.com/ashleyd480/inclusive-jobseeker-referral-site/raw/main/assets/socialmedia-main-ui.png",
      projectType: "formal project",
      projectSkills: "CSS, HTML, Javascript",
      project_video: "https://www.youtube.com/embed/denJU5Y4l-Q?si=Yb-6k4xrL4RPQIv-",
      projectUX: "Users can:\n\n- Use the like button and comment button to directly engage with referrals\n- Search for referral opportunities based on keyword to get ones that match your preference.\n- Sort referral opportunities based on date posted to get the freshest ones."
    },
    {
      projectId: 5,
      projectName: "sassy-dictionary-cli-app",
      projectURL: "https://github.com/ashleyd480/sassy-dictionary-cli-app",
      dateCompleted: "03/27/2024",
      projectHeaderImage: "https://github.com/ashleyd480/sassy-dictionary-cli-app/raw/main/assets/find-a-word.png",
      projectType: "formal project",
      projectSkills: "Java",
      projectBlurb: "This project was completed late Mar 2024 as part of General Assembly's Bootcamp, during Week 7 in our course. The application utilizes the concepts learned in Java, such as data types, variables, control flow, loops, methods, scopes, arrays, ArrayLists, Object-Oriented Programming (OOP), interfaces, exception handling, file I/O, and the Java Stream API.",
      projectUX: "Sassy AI Dictionary is a command line app written with Java that has an attitude and talks back to users.. The user is able to interact with a simple dictionary by typing commands and receiving text-based outputClasses."
    },
    {
      projectId: 6,
      projectName: "league-app-jpa-spring",
      projectURL: "https://github.com/ashleyd480/league-app-jpa-spring",
      dateCompleted: "04/19/2024",
      projectHeaderImage: "https://github.com/ashleyd480/league-app-jpa-spring/raw/main/assets/league-app-ui.png",
      projectType: "pair project",
      projectSkills: "Spring Boot",
      projectBlurb: "This pair project was completed mid-April 2024 as part of General Assembly's Bootcamp, during Week 10 in our course. The application utilizes the Spring Boot framework with the following dependencies: Spring Web, Spring Data JPA, an appropriate SQL database connector for postgres and also Lombok.",
      projectUX: "The League Manager app is a basic backend tool for managing sports teams, players, and their participation in various tournaments.",
      project_video: "https://www.youtube.com/embed/YFd7MktmuGY?si=KrjymP0unMj6QI4D"
    },
    {
      projectId: 7,
      projectName: "referral-site-api-backend",
      projectURL: "https://github.com/ashleyd480/referral-site-api-backend",
      dateCompleted: "05/06/2024",
      projectHeaderImage: "https://github.com/ashleyd480/referral-site-api-backend/raw/main/spring-referral-main/assets/ux-screenshot.png",
      projectType: "formal project",
      projectSkills: "JUnit/Mockito, Spring Boot",
      projectBlurb: "This project was completed early May 2024 as part of General Assembly's Bootcamp, during Week 12 in our course. The code contained in this repo builds the backend functionality for my inclusive-job-referral-site project. The following concepts are used: Spring Boot framework, REST API calls, Spring Data JPA, microservices, and JUnit/Mockito (for testing).",
      projectUX: "The API endpoints and associated backend code were designed with a user-first approach, considering what actions users would take on my hypothetical front-end site and what would need to happen under the hood.",
      project_video: "https://www.youtube.com/embed/blnpUZVEy10?si=yX2byshJAdkR-Yhv"
    },
    {
      projectId: 8,
      projectName: "emojified-react-todo-app",
      projectURL: "https://github.com/ashleyd480/emojified-react-todo-app",
      dateCompleted: "05/12/2024",
      projectHeaderImage: "https://github.com/ashleyd480/emojified-react-todo-app/raw/main/src/assets/app-ux-screenshot.png",
      projectType: "mini project",
      projectSkills: "CSS, React",
      projectBlurb: "This mini-project was created in my 13th week of coding bootcamp, using React and CSS. The concepts of Javascript and HTML are indirectly used through my JSX returns.",
      projectUX: "This is a humorous take on a to-do list tracker. Users can add their stuff to do, and ti will render as a list. Users can delete tasks as they complete them, or delete all of them. React gets moody when there's stuff to do, and React's emotion represented by a gif dynamically changes based on how many things there are to do.",
      project_video: "https://www.youtube.com/embed/YzwvWlxyoOs?si=k3HTnkeQ95YsilbF"
    },
    {
        "projectId": 9,
        "projectName": "reading-list-react-tracker",
        "projectURL": "https://github.com/ashleyd480/reading-list-react-tracker",
        "dateCompleted": "05/19/2024",
        "projectHeaderImage": "https://github.com/ashleyd480/reading-list-react-tracker/raw/main/src/assets/tracker-app-ux.png",
        "projectType": "mini project",
        "projectSkills": "CSS, React",
        "projectBlurb": "This project was created in my 14th week of coding bootcamp at General Assembly using React and CSS. The concepts of Javascript and HTML are indirectly used through my JSX returns. The code is an extension of my Emojified React To Do App and was created after about 5 days of instruction on React. Additional concepts used to create my reading tracker include routing, lifting state, and prop drilling.",
        "projectUX": "Users can use this app to add books that they want to read to a reading list, and the counter at the top right dynamically changes based on how many books the user has to read. Once a user is done reading a book, they can check it off their list. Users can also remove a book they no longer wish to read or just clear out the entire list. The history tab shows books that the user has finished reading, as well as ones the user has removed from their reading list. Finally, the search bar allows users to search by book title, showing both books the user wants to read as well as ones they have completed.",
        "project_video": "https://www.youtube.com/embed/JXRmuNOzAqw?si=lqicfzZrD6JhIYRO"
      },
      {
        "projectId": 10,
        "projectName": "access-map-app-capstone",
        "projectURL": "https://github.com/ashleyd480/access-map-app-capstone",
        "dateCompleted": "05/31/2024",
        "projectHeaderImage": "https://github.com/ashleyd480/access-map-app-capstone/raw/main/frontend-accessibility-app/accessibility--app/src/assets/home-ui.png",
        "projectType": "formal project",
        "projectSkills": "CSS, Java, Javascript, PostgreSQL, React, Spring Boot",
        "projectBlurb": "This capstone project was created in my 15th and 16th week of coding bootcamp at General Assembly using React, CSS, Javascript, Java, Spring Boot, and PostgreSQL. The project is a volunteer-driven maps application with a strong focus on accessibility. By leveraging crowdsourced data, the application provides valuable information about the most accessible places in various locations, helping users with disabilities navigate their environments more easily. This project also presented me with various learning opportunities, where I was able to explore new React and Spring Boot concepts in addition to deep dive into connecting frontend and backend.",
        "projectUX": "The app has the following main features: - Crowdsources Accessibility Information: Users can add details through tags and reviews about the accessibility of places they visit. - Geolocation-Based Search: The app uses geolocation to show accessible places near the user's current location. - Searching and Filtering: Users can search and filter results based on place name and/or accessibility rating. This helps users quickly find the most relevant and accessible places. - Place Details: Users can click into each place to see place details, reviews on accessibility, and accessibility feature tags. - User Profile: The profile page tracks the user’s contribution stats and history of contributions.",
        "project_video": "https://www.youtube.com/embed/-HMOEHSRJvQ?si=93dXi5mVzfghGB5n"
      },
      {
        "projectId": 11,
        "projectName": "ashley-portfolio-frontend",
        "projectURL": "https://github.com/ashleyd480/ashley-portfolio-frontend",
        "dateCompleted": "Ongoing 2024",
        "projectHeaderImage": "https://github.com/ashleyd480/ashley-portfolio-frontend/raw/master/src/assets/readme-images/frontend-ui.png",
        "projectType": "portfolio",
        "projectSkills": "CSS, Javascript, React",
        "projectBlurb": "This portfolio was started in my 18th week of coding, 2 weeks after the conclusion of our 16-week bootcamp. The frontend portion, hosted on Netlify, uses React, CSS, and Javascript.",
        "projectUX": "The frontend renders fetch API calls from the backend to display my project details, GA scores, project scores, and more. Additionally, my frontend maps over arrays of feedback images, and calls the Forem API to display my dev.to blogs , etc. Finally, my frontend showcases information about me including my hobbies, experience, and more.",
        "project_video": "https://www.youtube.com/embed/xkt8lCWuh4Q?si=KGyWDRwqK3qIu5YD"
      },
      {
        "projectId": 12,
        "projectName": "ashley-portfolio-backend",
        "projectURL": "https://github.com/ashleyd480/ashley-portfolio-backend",
        "dateCompleted": "Ongoing 2024",
        "projectHeaderImage": "https://github.com/ashleyd480/ashley-portfolio-backend/raw/master/src/assets/backend-ui.png",
        "projectType": "portfolio",
        "projectSkills": "Java, React, Spring Boot",
        "projectBlurb": "This portfolio was started in my 18th week of coding, 2 weeks after the conclusion of our 16-week bootcamp. The backend portion, hosted on Heroku, uses Java, Spring Boot, Postgres, and psql.",
        "projectUX": "The backend is where the databases for my GA scores, projects scores, and more are hosted in Postgres and saved as entities in Spring Boot. The 'get mapping' API endpoints are defined in the Controller classes, and a Global Exception handler is used for displaying user-facing error messages for any exceptions that occur. DTOs are used to relay data to the frontend.",
        "project_video": "https://www.youtube.com/embed/xkt8lCWuh4Q?si=KGyWDRwqK3qIu5YD"
      },
      {
        "projectId": 13,
        "projectName": "noob-algorithm-code-practice",
        "projectURL": "https://github.com/ashleyd480/noob-algorithm-code-practice",
        "dateCompleted": "Ongoing 2024",
        "projectHeaderImage": "https://github.com/ashleyd480/noob-algorithm-code-practice/raw/master/my-leetcode/assets/readme-cover.png",
        "projectType": "portfolio",
        "projectSkills": "Java, Javascript",
        "projectBlurb": "This repo hosts my leetcode and algorithm coding practice, which we were assigned to do after our 16-week bootcamp. My solutions utilize Java and/or Javascript.",
        "projectUX": "Each .md file contains a link to the problem, the description, my initial thoughts/pseudocodes, my attempts, and my solution in Java and/or Javascript. Any learnings are also included.",
        "project_video": ""
    },
    {
        "projectId": 14,
        "projectName": "export-slack-channel-template",
        "projectURL": "https://github.com/ashleyd480/export-slack-channel-template",
        "dateCompleted": "08/05/2024",
        "projectHeaderImage": "https://github.com/ashleyd480/export-slack-channel-template/raw/master/src/assets/flow-diagram.png",
        "projectType": "personal",
        "projectSkills": "Java, Spring Boot",
        "projectBlurb": "This mini-project was created in my 6th month of coding, using Java and Spring Boot. It allowed me to delve into working with an existing API—in this case, the Slack API. The project provides a template with MVP functionality that can be further built upon for an onboarding tool.",
        "projectUX": "The Spring Boot 'get' mapping methods talk to the conversations endpoint in the Slack API. This fetches a list of channels that a user is part of in Slack along with the descriptions and type, which can be pasted into Google Sheets. It also creates a Slack command that new hires can use to quickly join public channels.",
        "project_video": "https://www.youtube.com/embed/X6Q-PM4r7Uo?si=Kv_2Zjz5Kov7OV0W"
      },
      {
        "projectId": 15,
        "projectName": "local-guide-points-calculator",
        "projectURL": "https://github.com/ashleyd480/local-guide-points-calculator",
        "dateCompleted": "10/09/2024",
        "projectHeaderImage": "https://github.com/ashleyd480/local-guide-points-calculator/raw/master/src/assets/readme/smart-calculate.png",
        "projectType": "personal",
        "projectSkills": "React",
        "projectBlurb": "This passion project was created in my 7th month of coding to help Local Guides on Google Maps develop a personalized plan to reach their contribution goals. Built with React (+ Material UI), the tool lets users either auto-generate a plan based on their existing contributions or manually select specific categories.",
        "projectUX": "The app allows users to input their contribution data, goal points, and preferred contribution frequency. With either Smart or Manual calculation, the tool generates a plan detailing contributions needed per category to achieve their goals. Material UI components enhance the user experience, while intuitive navigation simplifies moving between steps.",
        "project_video": "https://www.youtube.com/embed/xe-2WzMZpZ8?si=ysgB3ADuCPOj7F2n"
      }
    ]